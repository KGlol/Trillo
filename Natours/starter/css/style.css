@charset "UTF-8";
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /**用于定义1rem的大小*/
  font-size: 62.5%; }

body {
  font-family: "Lato", sans-serif;
  /*sans-serif 无衬线字体类型*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

/* 以下为头部动画代码 */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  80% {
    transform: translateX(10px); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0%;
    transform: translateX(100px); }
  80% {
    transform: translateX(-10px); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    transform: translateY(30px);
    opacity: 0; }
  100% {
    opacity: 1;
    transform: translateY(0); } }

/**使文本框居中*/
.u-center-text {
  text-align: center; }

/**底部的margin*/
.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 60px; }

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: moveInLeft;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  /* animation-iteration-count: 2; 
  **加在父级上没有效果
  */ }

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1.5s ease-in-out; }

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* 使元素居中 */
  text-align: center; }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem;
  margin-bottom: 3rem; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin: -20vh 0; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4.jpg);
  background-size: cover;
  /**另一种斜角显示的方法，使用skew
     ** 优势原地倾斜*/
  transform: skewY(-5deg);
  /**使用直接子级选择器，去除直接子级的倾斜，*/
  /**以下注释中是原方法*/ }
  .section-features > * {
    transform: skewY(5deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -20vh; }

.section-stories {
  padding: 15rem 0;
  background-color: #eee; }

/**父级清浮动，用于清浮动，定位无效果*/
/* *以下为头部按钮样式 */
.btn:link,
.btn:visited {
  font-size: 1.6rem;
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  border-radius: 700px;
  display: inline-block;
  transition: all .5s;
  position: relative; }

.btn-animated {
  animation: moveInBottom 1.5s ease-out .75s backwards; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 8px 10px rgba(0, 0, 0, 0.2); }

.btn-white {
  background-color: #fff;
  color: #777; }

.btn::after {
  content: "";
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .3s; }

.btn-white::after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.3) scaleY(1.2);
  opacity: 0; }

/**section-about中的button*/
.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  /**小组件可以使用px为单位*/
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  /**transition可以加在此处*/
  transition: all .2s; }

.btn-text:hover {
  color: #fff;
  background-color: #55c57a;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  transform: translateY(-1px);
  box-shadow: 0 0.8rem 1rem rgba(0, 0, 0, 0.2); }

/**自己写的button样式*/
.selfmade-btn:link, .selfmade-btn:visited {
  /**行内元素无法实现transform效果*/
  display: inline-block;
  color: #fff;
  font-size: 1.6rem;
  text-transform: uppercase;
  text-decoration: none;
  border-radius: 5rem;
  padding: 1rem 3rem;
  margin-top: 3rem;
  transition: all .2s; }

.selfmade-btn:hover {
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  transform: translateY(-3px); }

.selfmade-btn:active {
  box-shadow: 0 0.8rem 1rem rgba(0, 0, 0, 0.25);
  transform: translateY(-1px); }

.selfmade-btn-green {
  background-color: #00bd00;
  position: relative; }
  .selfmade-btn-green::after {
    content: "";
    background-color: #00bd00;
    display: inline-block;
    border-radius: 700rem;
    width: 100%;
    height: 100%;
    transition: all .2;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .2s; }
  .selfmade-btn-green:hover::after {
    transform: scale(1.3, 1.2);
    opacity: 0; }

.composition {
  position: relative;
  /**使.composition被hover时，未被hover的img缩小*/ }
  .composition-photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    /**?*/
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    .composition-photo-p1 {
      left: 0;
      top: -2rem; }
    .composition-photo-p2 {
      right: 0;
      top: 2rem; }
    .composition-photo-p3 {
      left: 20%;
      top: 10rem; }
    .composition-photo:hover {
      outline: 1.5rem solid #55c57a;
      /**伸缩且向上*/
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition-photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.7);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  /**使用圆角可以更美观*/
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: all .2s;
  /**恢复子级元素的倾斜*/ }
  .feature-box:hover {
    transform: scale(1.02) translateY(-1.5rem); }
  .feature-box-icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    -webkit-background-clip: text;
    color: transparent;
    background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)); }

/**翻转卡片的效果*/
.card {
  /**perspective加在父级上，*/
  perspective: 150rem;
  /**兼容firefox*/
  -moz-perspective: 150rem;
  position: relative;
  /**子元素绝对定位使得其height collapsed（坍方）*/
  height: 51rem;
  /**卡片两面的共有属性*/
  /**卡片hover时的翻转*/
  /**背景图片1.2.3*/
  /**card中的标题文字*/
  /**正面的列表*/
  /**card背面内容*/
  /**文字部分*/ }
  .card-side {
    height: 51rem;
    transition: all .8s ease-out;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    /**使两面重叠*/
    position: absolute;
    top: 0;
    left: 0;
    /**使定位后的元素恢复原来的宽度*/
    width: 100%;
    /**使背面的元素在不翻转时不可见*/
    backface-visibility: hidden;
    /**使背景图片在页面放大缩小时正常显示*/
    overflow: hidden;
    /**卡片正面的属性*/
    /**卡片反面的属性
    **反面默认已被翻转180deg
    */ }
    .card-side-front {
      background-color: #fff; }
    .card-side-back {
      transform: rotateY(180deg);
      /**三个card背面的渐变色*/ }
      .card-side-back-color-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card-side-back-color-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card-side-back-color-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card-side-front {
    /**主要bug，两面翻转的方向应该相同，所以使用180deg*/
    transform: rotateY(-180deg); }
  .card:hover .card-side-back {
    transform: rotateY(0deg); }
  .card-picture {
    background-size: cover;
    height: 25rem;
    background-blend-mode: screen;
    /**兼容safari，且兼容属性应在原属性之前*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    /**clip-path会破坏父级的overflow属性*/
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-radius: 3px; }
    .card-picture-1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card-picture-2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card-picture-3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card-heading {
    color: #fff;
    font-size: 3rem;
    font-weight: 300;
    text-transform: uppercase;
    position: absolute;
    top: 12rem;
    right: 2rem;
    /**使p标签中的span居右且分成两行*/
    text-align: right;
    width: 65%;
    /**标题中的文字*/ }
    .card-heading-span {
      padding: 1rem 2rem;
      /**兼容下的safari和chrome，使多行行内元素的断处也有设定的样式*/
      -webkit-box-decoration-break: clone;
      box-decoration-break: clone; }
      .card-heading-span-1 {
        background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
      .card-heading-span-2 {
        background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
      .card-heading-span-3 {
        background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card-details {
    text-align: center;
    padding: 2rem; }
    .card-details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card-details ul li {
        font-size: 1.7rem;
        padding: 1rem;
        /**用在要指定的子元素选择器上，但指定除去其父元素的最后一个子元素*/ }
        .card-details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card-cta {
    /**使其居中*/
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
  .card-price-box {
    color: #fff;
    text-align: center;
    margin-bottom: 5rem; }
  .card-price-only {
    font-size: 2rem;
    text-transform: uppercase; }
  .card-price-value {
    font-size: 6rem;
    font-weight: 100; }

.story {
  width: 75%;
  padding: 6rem;
  padding-left: 9rem;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 3px;
  box-shadow: 0 2rem 6rem rgba(0, 0, 0, 0.2);
  margin: 0 auto;
  font-size: 1.6rem;
  font-weight: 400;
  /**skewX时，X轴方向是平的
  **skewY时，Y轴方向是平的
  */
  transform: skewX(-12deg);
  /**修复子级被倾斜的方法，反方向倾斜*/ }
  .story > * {
    transform: skewX(12deg); }
  .story-shape {
    width: 15rem;
    height: 15rem;
    /**浮动使得文字包围图形*/
    float: left;
    /**shape-outside规定元素的形状为圆形，浮动后文字会以其形状浮动，但该元素视觉上并不会显示为圆形*/
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    /**clip-path使元素显示为圆形*/
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translate(-3rem) skewX(12deg); }
  .story-image {
    /**响应式的网页中图片应该总有一个百分比的宽度或高度
    **当只给图片一个宽度时，因为一般图片的宽度大于高度，所以现实为高度无法填满
    **当个同时给出高度和宽度100%时，图片会被拉伸（图片原始宽高比不是一比一时）
    **只有给出高度100%时，显示比较正常
    */
    height: 100%;
    transform: translateX(-4rem); }

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to left top, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /**剪裁*/
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%); }

.logo-box {
  position: absolute;
  top: 30px;
  left: 30px; }

.logo {
  height: 35px; }

.heading-secondary {
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: .2rem;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  /**以下两行代码，显示文字下的背景图*/
  -webkit-background-clip: text;
  color: transparent;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(-2deg) skewX(-5deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-secondary-selfmade {
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  margin: 0 auto;
  transition: all .2s;
  /**以下五行代码为设置渐变色文字*/
  display: inline-block;
  background-clip: text;
  /**兼容chrome*/
  -webkit-background-clip: text;
  color: transparent;
  background-image: linear-gradient(to right, #7ed56f, #28b485); }
  .heading-secondary-selfmade:hover {
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
    transform: scale(1.1) skew(-5deg, -2deg); }

.btn-12 {
  padding: 10rem;
  margin: 5rem; }

/**以下为grid layout的样式*/
.row {
  max-width: 114rem;
  margin: 0 auto;
  /**子级浮动时，加在父级以清浮动*/
  /**属性选择器，用来定义共有的属性*/ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left;
    /**除去最后一个*/ }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    /**用以动态计算div的宽度*/
    width: calc( (100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + (2 * 6rem)); }
